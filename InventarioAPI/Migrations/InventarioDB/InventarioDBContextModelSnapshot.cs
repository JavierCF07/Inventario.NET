// <auto-generated />
using System;
using InventarioAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventarioAPI.Migrations.InventarioDB
{
    [DbContext(typeof(InventarioDBContext))]
    partial class InventarioDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InventarioAPI.Entities.Categoria", b =>
                {
                    b.Property<int>("codigoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired();

                    b.HasKey("codigoCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("InventarioAPI.Entities.Clientes", b =>
                {
                    b.Property<string>("nit")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DPI")
                        .IsRequired();

                    b.Property<string>("direccion");

                    b.Property<string>("nombre");

                    b.HasKey("nit");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("InventarioAPI.Entities.Compras", b =>
                {
                    b.Property<int>("idCompra")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("codigoProveedor");

                    b.Property<DateTime>("fecha");

                    b.Property<int>("numeroDocumento");

                    b.Property<decimal>("total");

                    b.HasKey("idCompra");

                    b.HasIndex("codigoProveedor");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("InventarioAPI.Entities.DetalleCompra", b =>
                {
                    b.Property<int>("idDetalle")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<int>("codigoProducto");

                    b.Property<int>("idCompra");

                    b.Property<decimal>("precio");

                    b.HasKey("idDetalle");

                    b.HasIndex("codigoProducto");

                    b.HasIndex("idCompra");

                    b.ToTable("DetalleCompra");
                });

            modelBuilder.Entity("InventarioAPI.Entities.DetalleFactura", b =>
                {
                    b.Property<int>("codigoDetalle")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad");

                    b.Property<int>("codigoProducto");

                    b.Property<decimal>("descuento");

                    b.Property<int>("numeroFactura");

                    b.Property<decimal>("precio");

                    b.HasKey("codigoDetalle");

                    b.HasIndex("codigoProducto");

                    b.HasIndex("numeroFactura");

                    b.ToTable("DetalleFactura");
                });

            modelBuilder.Entity("InventarioAPI.Entities.EmailCliente", b =>
                {
                    b.Property<int>("codigoEmail")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("nit");

                    b.HasKey("codigoEmail");

                    b.HasIndex("nit");

                    b.ToTable("EmailCliente");
                });

            modelBuilder.Entity("InventarioAPI.Entities.EmailProveedor", b =>
                {
                    b.Property<int>("codigoEmail")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("codigoProveedor");

                    b.Property<string>("email")
                        .IsRequired();

                    b.HasKey("codigoEmail");

                    b.HasIndex("codigoProveedor");

                    b.ToTable("EmailProveedor");
                });

            modelBuilder.Entity("InventarioAPI.Entities.Factura", b =>
                {
                    b.Property<int>("numeroFactura")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fecha");

                    b.Property<string>("nit")
                        .IsRequired();

                    b.Property<decimal>("total");

                    b.HasKey("numeroFactura");

                    b.HasIndex("nit");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("InventarioAPI.Entities.Inventario", b =>
                {
                    b.Property<int>("codigoInventario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("codigoProducto");

                    b.Property<int>("entradas");

                    b.Property<DateTime>("fecha");

                    b.Property<decimal>("precio");

                    b.Property<int>("salidas");

                    b.Property<string>("tipoRegistro")
                        .IsRequired();

                    b.HasKey("codigoInventario");

                    b.HasIndex("codigoProducto");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("InventarioAPI.Entities.Producto", b =>
                {
                    b.Property<int>("codigoProducto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("codigoCategoria");

                    b.Property<int>("codigoEmpaque");

                    b.Property<string>("descripcion")
                        .IsRequired();

                    b.Property<int>("existencia");

                    b.Property<string>("imagen");

                    b.Property<decimal>("precioPorDocena");

                    b.Property<decimal>("precioPorMayor");

                    b.Property<decimal>("precioUnitario");

                    b.HasKey("codigoProducto");

                    b.HasIndex("codigoCategoria");

                    b.HasIndex("codigoEmpaque");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("InventarioAPI.Entities.Proveedores", b =>
                {
                    b.Property<int>("codigoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contactoPrincipal");

                    b.Property<string>("direccion");

                    b.Property<string>("nit")
                        .IsRequired();

                    b.Property<string>("paginaWeb");

                    b.Property<string>("razonSocial");

                    b.HasKey("codigoProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("InventarioAPI.Entities.TelefonoCliente", b =>
                {
                    b.Property<int>("codigoTelefono")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired();

                    b.Property<string>("nit");

                    b.Property<string>("numero");

                    b.HasKey("codigoTelefono");

                    b.HasIndex("nit");

                    b.ToTable("TelefonoCliente");
                });

            modelBuilder.Entity("InventarioAPI.Entities.TelefonoProveedor", b =>
                {
                    b.Property<int>("codigoTelefono")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("codigoProveedor");

                    b.Property<string>("descripcion")
                        .IsRequired();

                    b.Property<string>("numero");

                    b.HasKey("codigoTelefono");

                    b.HasIndex("codigoProveedor");

                    b.ToTable("TelefonoProveedor");
                });

            modelBuilder.Entity("InventarioAPI.Entities.TipoEmpaque", b =>
                {
                    b.Property<int>("codigoEmpaque")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired();

                    b.HasKey("codigoEmpaque");

                    b.ToTable("TipoEmpaque");
                });

            modelBuilder.Entity("InventarioAPI.Entities.Compras", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Proveedores", "Proveedores")
                        .WithMany()
                        .HasForeignKey("codigoProveedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioAPI.Entities.DetalleCompra", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("codigoProducto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioAPI.Entities.Compras", "Compras")
                        .WithMany()
                        .HasForeignKey("idCompra")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioAPI.Entities.DetalleFactura", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("codigoProducto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioAPI.Entities.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("numeroFactura")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioAPI.Entities.EmailCliente", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("nit");
                });

            modelBuilder.Entity("InventarioAPI.Entities.EmailProveedor", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Proveedores", "Proveedores")
                        .WithMany()
                        .HasForeignKey("codigoProveedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioAPI.Entities.Factura", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("nit")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioAPI.Entities.Inventario", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("codigoProducto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioAPI.Entities.Producto", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("codigoCategoria")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InventarioAPI.Entities.TipoEmpaque", "TipoEmpaque")
                        .WithMany()
                        .HasForeignKey("codigoEmpaque")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InventarioAPI.Entities.TelefonoCliente", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("nit");
                });

            modelBuilder.Entity("InventarioAPI.Entities.TelefonoProveedor", b =>
                {
                    b.HasOne("InventarioAPI.Entities.Proveedores", "Proveedores")
                        .WithMany()
                        .HasForeignKey("codigoProveedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
